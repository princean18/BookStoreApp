@{
    ViewData["Title"] = "Borrowing";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">@ViewData["Title"]</h1>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    View all borrowings
                </div>

                <div class="panel-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover" id="dataTableBorrowing">
                            <thead>
                                <tr>
                                    <th width="20%">Username</th>
                                    <th>Book Name</th>
                                    <th>Borrow Date</th>
                                    <th>Due Date</th>
                                    <th>Return Date</th>
                                    <th>Late Fee</th>
                                    <th width="20%">Actions</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    function onClickDeleteConfirm(val) {
        // //event.preventDefault(); // prevent form submit
        // //var form = event.target.form; // storing the form
        // swal.fire({
        //     title: "Are you sure?",
        //     text: "Data will be deleted.",
        //     showCancelButton: true,
        //     confirmButtonColor: "#D22B2B",
        //     confirmButtonText: "Yes, delete it!",
        //     cancelButtonText: "No, cancel please!",
        // }).then((result) => {
        //     if (result.value) {
        //         onClickDelete(val);
        //     }
        // });
    }

    function onClickDelete(val) {

        // $.ajax({
        //     url: "/books/deletebook",
        //     type: "POST",
        //     dataType: "json",
        //     contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
        //     data:  "id="+val,
        //     success: function (result) {
        //         console.log(result);
        //         swal.fire("Deleted!", "Data has been deleted.", "success");
        //         $('#dataTableBooks').DataTable().ajax.reload();
        //     },
        //     error: function (err) {
        //         console.log(err);
        //     }
        // });
    }

     $(document).ready(function() {

        $('#dataTableBorrowing').dataTable( {
            dataType: 'json',
            ajax: {
                url: '/borrowing/borrowingdetails',
                dataType: 'json',
                contentType: "application/json",
                dataSrc: function(res) {
                    console.log(res);
                    return res;
                }
            },
            columns: [
                { data: "userName" },
                { data: "bookName" },
                { data: "borrowDate", className: "text-right" },
                { data: "dueDate", className: "text-right" },
                { data: "returnDate", className: "text-right" },
                { data: "lateFee", className: "text-right" },
                { title: "Action" }
            ],
             "columnDefs": [
                {
                    title: 'User',
                    "targets": 0
                },
                {
                    title: 'Book Name',
                    "targets": 1
                },
                {
                    title: 'Borrowed Date',
                    "render": function ( data, type, row ) {
                        return formatDate(row.borrowDate);
                    },
                    "targets": 2
                },
                {
                    title: 'Due Date',
                    "render": function ( data, type, row ) {
                        return formatDate(row.dueDate);
                    },
                    "targets": 3
                },
                {
                    title: 'Return Date',
                    "render": function ( data, type, row ) {
                        return formatDate(row.returnDate);
                    },
                    "targets": 4
                },
                {
                    title: 'Late Fee',
                    "targets": 5
                },
                {
                    title: 'Action',
                    "render": function ( data, type, row ) {
                        return '<button id="approveBtn" class="btn btn-sm btn-info"><i class="fa fa-calculator fa-fw"></i> Calculate Late Fee </button> <button id="editBtn" onclick="onClickEdit('+row.id+')" class="btn btn-sm btn-primary"><i class="fa fa-edit fa-fw"></i> Edit </button> <button onclick="onClickDeleteConfirm('+row.id+')" class="btn btn-sm btn-danger"><i class="fa fa-trash fa-fw"></i> Delete </button>';
                    },
                    "targets": 6
                },
             ]
        });
     });


    function onClickEdit(id) {
        //window.location.href = "/books/editbooks/"+id;
    }

    function formatDate(date) {
        var d = new Date(date);

        var curr_day = d.getDate();
        var curr_month = d.getMonth();
        var curr_year = d.getFullYear();

        curr_month++ ; // In js, first month is 0, not 1

        var formattedDate = curr_day + "/" + curr_month + "/" + curr_year
        return formattedDate;
    }




</script>